#!/usr/bin/env bash

# This is automated install script for TripleO
# This file compiles commands found at ../devtest.md file
# and adds some tests and parts for better automation

# do git checkout of needed tools by default
GIT_CHECKOUT=${GIT_CHECKOUT:-1}

# function for better handling of waiting till something completes
# by Derek Higgins (https://github.com/derekhiggins)
wait_for(){
  LOOPS=$1
  SLEEPTIME=$2
  shift ; shift
  i=0
  while [ $i -lt $LOOPS ] ; do
    i=$((i + 1))
    $@ && return 0 || true
    sleep $SLEEPTIME
  done
  return 1
}

set -e

# test for existing ssh public key
SSH_KEY_LOCATION=~/.ssh
declare -a POSSIBLE_SSH_KEY_FILES=('id_rsa.pub' 'id_dsa.pub');
set +e
for key_file in "${POSSIBLE_SSH_KEY_FILES[@]}"
do
  file "$SSH_KEY_LOCATION/$key_file" | grep "public key"
  if [ "$?" == "0" ]; then
    SSH_KEY_FILE="$SSH_KEY_LOCATION/$key_file"
    break
  fi
done
set -e
if [ -z "$SSH_KEY_FILE" ]; then
    echo "There is no public key for ssh access. Please create one and run again."
    exit
fi


# TODO: test for running ssh service and open port 22

# creates tripleo root directory
export TRIPLEO_ROOT=~/tripleo

if [ ! -d "$TRIPLEO_ROOT" ]; then
  mkdir $TRIPLEO_ROOT
fi


if [ $GIT_CHECKOUT == 1 ]; then
  # inteligently clone repos (when git repo exists => pull)
  declare -a GITHUB_REPOS=('tripleo/incubator/master' 'tripleo/bm_poseur/master' 'stackforge/diskimage-builder/master' 'stackforge/tripleo-image-elements/master' 'stackforge/tripleo-heat-templates/master');
  for repo_with_commit in "${GITHUB_REPOS[@]}"
  do
    cd $TRIPLEO_ROOT
    repo=${repo_with_commit%/*}
    repo_commit=${repo_with_commit##*/}
    repo_dir=${repo##*/}
    if [ -d "$repo_dir" ]; then
      set +e
      cd $repo_dir
      git status
      if [ "$?" == "0" ]; then
        git reset HEAD --hard
        git pull
      else
        cd $TRIPLEO_ROOT
        rm -rf $repo_dir
        git clone "https://github.com/${repo}"
      fi
      set -e
    else
      git clone "https://github.com/${repo}"
    fi
    cd $TRIPLEO_ROOT
    cd $repo_dir
    git checkout $repo_commit
  done
fi
# nova tools installed here
export PATH=$PATH:$TRIPLEO_ROOT/incubator/scripts

# installs dependencies on host
install-dependencies

# test for user's groups - it has to contain libvirtd
set +e
id | grep libvirtd
if [ "$?" != "0" ]; then
  echo "Please, log out and log in to be able to connect to libvirt"
  echo "and then run this script again"
  exit 1
fi
set -e

# setup network - configures openvswitch bridge and tells libvirt
setup-network

# create seed VM
cd $TRIPLEO_ROOT/tripleo-image-elements/elements/boot-stack
sed -i "s/\"user\": \"stack\",/\"user\": \"`whoami`\",/" config.json

cd $TRIPLEO_ROOT/incubator/
scripts/boot-elements boot-stack -o seed

SEED_IP=`scripts/get-vm-ip seed`

# mask SEED_IP out of proxy
export no_proxy=$no_proxy,$SEED_IP

# copy credentials file, edit IP and source it
scp -o StrictHostKeyChecking=no root@$SEED_IP:stackrc $TRIPLEO_ROOT/seedrc
sed -i "s/localhost/$SEED_IP/" $TRIPLEO_ROOT/seedrc
source $TRIPLEO_ROOT/seedrc

export MACS=`$TRIPLEO_ROOT/bm_poseur/bm_poseur get-macs`

# delete existing baremetal vms
# IS THIS NEEDED?
# sudo $TRIPLEO_ROOT/bm_poseur/bm_poseur destroy-vm

create-nodes 1 512 10 3
user-config
setup-baremetal 1 512 10 seed


ssh root@$SEED_IP "cat /opt/stack/boot-stack/virtual-power-key.pub" >> ~/.ssh/authorized_keys

ip route add 192.0.2.0/24 dev virbr0 via $SEED_IP

export ELEMENTS_PATH=$TRIPLEO_ROOT/tripleo-image-elements/elements
$TRIPLEO_ROOT/diskimage-builder/bin/disk-image-create -u ubuntu \
  -a i386 -o undercloud boot-stack heat-localip heat-cfntools

load-image undercloud.qcow2


# stack in review
# heat stack-create -f $TRIPLEO_ROOT/tripleo-heat-templates/undercloud-vm.yaml \
#   -P "PowerUserName=$(whoami)" undercloud

nova boot --flavor baremetal --image undercloud --key_name default bmtest

# Wait for the following to show up in the nova-compute log on the bootstrap node

# FIXME: temporary solution for waiting 
sleep 60s

# 2013-01-08 16:43:13 AUDIT nova.compute.resource_tracker [-] Auditing locally available compute resources
# 2013-01-08 16:43:13 DEBUG nova.compute.resource_tracker [-] Hypervisor: free ram (MB): 512 from (pid=24853) _report_hypervisor_resource_view /opt/stack/nova/nova/compute/resource_tracker.py:327
# 2013-01-08 16:43:13 DEBUG nova.compute.resource_tracker [-] Hypervisor: free disk (GB): 0 from (pid=24853) _report_hypervisor_resource_view /opt/stack/nova/nova/compute/resource_tracker.py:328
# 2013-01-08 16:43:13 DEBUG nova.compute.resource_tracker [-] Hypervisor: free VCPUs: 1 from (pid=24853) _report_hypervisor_resource_view /opt/stack/nova/nova/compute/resource_tracker.py:333
# 2013-01-08 16:43:13 AUDIT nova.compute.resource_tracker [-] Free ram (MB): 0
# 2013-01-08 16:43:13 AUDIT nova.compute.resource_tracker [-] Free disk (GB): 0
# 2013-01-08 16:43:13 AUDIT nova.compute.resource_tracker [-] Free VCPUS: 1


